-lnsl -lsocket -lresolv
ex:	cc -o server server.c -lnsl -lsocket -lresolv
	If you still get errors, you could try further adding a -lxnet to the end of that command line. I donâ€™t know what that does, exactly, but some people seem to need it.
------------------------
{
	# two tipes of sockets
		* Stream sockets:
			-open connection
			*- send() the data out
		* datagram sockets:
			- it use IP for routing, but they don't use TCP; they use the "User Datagram Protocol" UDP
			- dhcpcd (a DHCP client): multiplayer games, streaming audio, video conferencing, etc.
			- TFTP: sample application.
			*- Encapsulate the packet in the method of your choosing and sendto() it out 
		*** TFTP && DHCPCD are used to transfer binary applicaitions from one host to another!
			data can't be lost if you expect the applicaitions to work when it arrives!
		*
			- Application layer (tlenet, ftp, etc.)
			- Host-to-Host Transport layer (TCP, UDP)
			- Internet Layer (IP and routing)
			- Network access layer (Ethernet, wi-fi, or whatever)
}
{
	# IP adresses, -v 4 and 6
		* 
}










Words:
		perhaps you are wondering just what they are exactly.
		send() and recv() offer much greater control over your data transmission.